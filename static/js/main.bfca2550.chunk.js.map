{"version":3,"sources":["Person.js","PeopleTable.js","App.js","index.js"],"names":["Person","_ref","item","_useState","useState","_useState2","Object","slicedToArray","selectedTr","setSelectedTr","useEffect","react_default","a","createElement","className","cn","sex","id","onClick","born","name","died","concat","Math","ceil","mother","father","PeopleTable","people","sortPeople","map","key","src_Person","App","arr","search","setPeopleArr","_useState3","_useState4","serchName","setSerchName","_useState5","_useState6","selectedButton","setValueButton","peopleArr","regenerator_default","async","_context","prev","next","awrap","fetch","then","responce","json","sent","index","objectSpread2","stop","getPeople","type","value","onChange","event","target","trimLeft","src_PeopleTable","filter","toLowerCase","includes","trim","select","toConsumableArray","sort","b","localeCompare","arrReverse","reverse","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"sNAgDeA,EA5CA,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAAWC,EACSC,mBAAS,IADlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpBK,EADoBH,EAAA,GACRI,EADQJ,EAAA,GAM3B,OAHAK,oBAAU,aACP,CAACF,IAGFG,EAAAC,EAAAC,cAAA,MACEC,UACEC,IACe,MAAbb,EAAKc,IAAc,iBAAmB,eACtCR,IAAeN,EAAKe,GAAK,mBAAqB,IAGlDC,QAAS,kBAAMT,EAAcP,EAAKe,MAElCN,EAAAC,EAAAC,cAAA,UAAKX,EAAKe,IACVN,EAAAC,EAAAC,cAAA,MAAIC,UAAWZ,EAAKiB,KAAO,KACvB,qBAAuB,IAExBjB,EAAKkB,MAERT,EAAAC,EAAAC,cAAA,UAAKX,EAAKc,KACVL,EAAAC,EAAAC,cAAA,UAAKX,EAAKiB,MACVR,EAAAC,EAAAC,cAAA,UAAKX,EAAKmB,MACVV,EAAAC,EAAAC,cAAA,MAAIC,UAAWZ,EAAKmB,KAAOnB,EAAKiB,MAAQ,GACpC,gBAAkB,IAEnBjB,EAAKmB,KAAOnB,EAAKiB,MAEpBR,EAAAC,EAAAC,cAAA,MAAIC,UAAS,oBAAAQ,OAAsBC,KAAKC,KAAKtB,EAAKmB,KAAO,OACtDE,KAAKC,KAAKtB,EAAKmB,KAAO,MAEzBV,EAAAC,EAAAC,cAAA,UAAKX,EAAKuB,QACVd,EAAAC,EAAAC,cAAA,UAAKX,EAAKwB,UCwBDC,EA1DK,SAAA1B,GAAA,IAAG2B,EAAH3B,EAAG2B,OAAQC,EAAX5B,EAAW4B,WAAX,OAElBlB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MACEK,QAAS,kBAAMW,EAAW,QAD5B,MAKAlB,EAAAC,EAAAC,cAAA,MACEK,QAAS,kBAAMW,EAAW,UAD5B,QAKAlB,EAAAC,EAAAC,cAAA,MACEK,QAAS,kBAAMW,EAAW,SAD5B,OAKAlB,EAAAC,EAAAC,cAAA,MACEK,QAAS,kBAAMW,EAAW,UAD5B,QAKAlB,EAAAC,EAAAC,cAAA,MACEK,QAAS,kBAAMW,EAAW,UAD5B,QAKAlB,EAAAC,EAAAC,cAAA,MACEK,QAAS,kBAAMW,EAAW,SAD5B,OAKAlB,EAAAC,EAAAC,cAAA,MACEK,QAAS,kBAAMW,EAAW,aAD5B,WAKAlB,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,sBAGHe,EAAOE,IAAI,SAAA5B,GAAI,OACdS,EAAAC,EAAAC,cAAA,SAAOkB,IAAK7B,EAAKkB,MACfT,EAAAC,EAAAC,cAACmB,EAAD,CAAQ9B,KAAMA,SC2DP+B,EArGH,WAAM,IAmBMC,EAAKC,EAnBXhC,EACeC,mBAAS,IADxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTyB,EADSvB,EAAA,GACD+B,EADC/B,EAAA,GAAAgC,EAEkBjC,mBAAS,IAF3BkC,EAAAhC,OAAAC,EAAA,EAAAD,CAAA+B,EAAA,GAETE,EAFSD,EAAA,GAEEE,EAFFF,EAAA,GAAAG,EAGyBrC,mBAAS,IAHlCsC,EAAApC,OAAAC,EAAA,EAAAD,CAAAmC,EAAA,GAGTE,EAHSD,EAAA,GAGOE,EAHPF,EAAA,GAiFhB,OAJAhC,oBAAU,YAxEQ,eAAAmC,EAAAC,EAAAlC,EAAAmC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAAJ,EAAAlC,EAAAuC,MAPKC,MAFb,qEAEwBC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UAO1C,OACVV,EADUG,EAAAQ,KAGhBpB,EAAaS,EAAUf,IAAI,SAAC5B,EAAMuD,GAAP,OAAAnD,OAAAoD,EAAA,EAAApD,CAAA,GAEpBJ,EAFoB,CAEde,GAAIwC,EAAQ,OALT,wBAAAT,EAAAW,UAyEhBC,IACC,IAGDjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,eACAH,EAAAC,EAAAC,cAAA,SACEgD,KAAK,OACL/C,UAAU,eACVgD,MAAOvB,EACPwB,SA3EW,SAACC,GAClBxB,EAAawB,EAAMC,OAAOH,MAAMI,gBA6E9BvD,EAAAC,EAAAC,cAACsD,EAAD,CACEvC,QA3EgBM,EA2EKN,EA3EAO,EA2EQI,EA3EGL,EAAIkC,OAAO,SAAClE,GAChD,SAAKA,EAAKuB,OAASvB,EAAKwB,OAASxB,EAAKkB,MACnCiD,cAAcC,SAASnC,EAAOkC,cAAcE,SACtCrE,KAyEL2B,WAnEa,SAAC2C,GAClB,OAAQA,GACN,IAAK,OACL,IAAK,MACCA,IAAW7B,IACbP,EAAa9B,OAAAmE,EAAA,EAAAnE,CAAIsB,GACd8C,KAAK,SAAC9D,EAAG+D,GAAJ,OAAU/D,EAAE4D,GAAQI,cAAcD,EAAEH,OAC5C5B,EAAe4B,IAGjB,MACF,IAAK,OACL,IAAK,OACL,IAAK,KACCA,IAAW7B,IACbP,EAAa9B,OAAAmE,EAAA,EAAAnE,CAAIsB,GACd8C,KAAK,SAAC9D,EAAG+D,GAAJ,OAAU/D,EAAE4D,GAAUG,EAAEH,MAChC5B,EAAe4B,IAGjB,MAEF,IAAK,MACCA,IAAW7B,IACbP,EAAa9B,OAAAmE,EAAA,EAAAnE,CAAIsB,GACd8C,KAAK,SAAC9D,EAAG+D,GAAJ,OAAW/D,EAAES,KAAOT,EAAEO,MAASwD,EAAEtD,KAAOsD,EAAExD,SAClDyB,EAAe,QAGjB,MACF,IAAK,UACC4B,IAAW7B,IACbP,EAAa9B,OAAAmE,EAAA,EAAAnE,CAAIsB,GACd8C,KAAK,SAAC9D,EAAG+D,GAAJ,OACJpD,KAAKC,KAAKZ,EAAES,KAAO,KAASE,KAAKC,KAAKmD,EAAEtD,KAAO,QACnDuB,EAAe,YAGjB,MACF,QAASR,EAAa9B,OAAAmE,EAAA,EAAAnE,CAAIsB,IAG5B,GAAI4C,IAAW7B,EAAgB,CAC7B,IAAMkC,EAAavE,OAAAmE,EAAA,EAAAnE,CAAIsB,GAAQkD,UAE/B1C,EAAayC,SC5EnBE,IAASC,OAAOrE,EAAAC,EAAAC,cAACoE,EAAD,CAAKC,KAAM,MAASC,SAASC,eAAe","file":"static/js/main.bfca2550.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropType from 'prop-types';\nimport cn from 'classnames';\n\nconst Person = ({ item }) => {\n  const [selectedTr, setSelectedTr] = useState('');\n\n  useEffect(() => {\n  }, [selectedTr]);\n\n  return (\n    <tr\n      className={\n        cn(\n          item.sex === 'f' ? 'Person--female' : 'Person--male',\n          selectedTr === item.id ? 'Person--selected' : ''\n        )\n      }\n      onClick={() => setSelectedTr(item.id)}\n    >\n      <td>{item.id}</td>\n      <td className={item.born < 1650\n        ? 'Person--decoration' : ''}\n      >\n        {item.name}\n      </td>\n      <td>{item.sex}</td>\n      <td>{item.born}</td>\n      <td>{item.died}</td>\n      <td className={item.died - item.born >= 65\n        ? 'Person--green' : ''}\n      >\n        {item.died - item.born}\n      </td>\n      <td className={`Person--lived-in-${Math.ceil(item.died / 100)}`}>\n        {Math.ceil(item.died / 100)}\n      </td>\n      <td>{item.mother}</td>\n      <td>{item.father}</td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  item: PropType.object.isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\n\nconst PeopleTable = ({ people, sortPeople }) => (\n\n  <table>\n    <thead>\n      <tr>\n        <th\n          onClick={() => sortPeople('id')}\n        >\n          id\n        </th>\n        <th\n          onClick={() => sortPeople('name')}\n        >\n        name\n        </th>\n        <th\n          onClick={() => sortPeople('sex')}\n        >\n          sex\n        </th>\n        <th\n          onClick={() => sortPeople('born')}\n        >\n          born\n        </th>\n        <th\n          onClick={() => sortPeople('died')}\n        >\n          died\n        </th>\n        <th\n          onClick={() => sortPeople('age')}\n        >\n          age\n        </th>\n        <th\n          onClick={() => sortPeople('centery')}\n        >\n          century\n        </th>\n        <th>mother</th>\n        <th>father</th>\n      </tr>\n    </thead>\n    {people.map(item => (\n      <tbody key={item.name}>\n        <Person item={item} />\n      </tbody>\n    ))}\n  </table>\n\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortPeople: PropTypes.func.isRequired,\n};\n\nexport default PeopleTable;\n","import React, { useState, useEffect } from 'react';\nimport './style.scss';\nimport PeopleTable from './PeopleTable';\n\nconst URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst loadPeople = () => fetch(URL).then(responce => responce.json());\n\nconst App = () => {\n  const [people, setPeopleArr] = useState([]);\n  const [serchName, setSerchName] = useState('');\n  const [selectedButton, setValueButton] = useState('');\n\n  const getPeople = async() => {\n    const peopleArr = await loadPeople();\n\n    setPeopleArr(peopleArr.map((item, index) => (\n      {\n        ...item, id: index + 1,\n      }\n    )));\n  };\n\n  const changeName = (event) => {\n    setSerchName(event.target.value.trimLeft());\n  };\n\n  const filterPeople = (arr, search) => arr.filter((item) => {\n    if ((item.mother + item.father + item.name)\n      .toLowerCase().includes(search.toLowerCase().trim())) {\n      return item;\n    }\n\n    return false;\n  });\n\n  const sortPeople = (select) => {\n    switch (select) {\n      case 'name':\n      case 'sex':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => a[select].localeCompare(b[select])));\n          setValueButton(select);\n        }\n\n        break;\n      case 'died':\n      case 'born':\n      case 'id':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => a[select] - b[select]));\n          setValueButton(select);\n        }\n\n        break;\n\n      case 'age':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => (a.died - a.born) - (b.died - b.born)));\n          setValueButton('age');\n        }\n\n        break;\n      case 'centery':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => (\n              Math.ceil(a.died / 100)) - (Math.ceil(b.died / 100))));\n          setValueButton('centery');\n        }\n\n        break;\n      default: setPeopleArr([...people]);\n    }\n\n    if (select === selectedButton) {\n      const arrReverse = [...people].reverse();\n\n      setPeopleArr(arrReverse);\n    }\n  };\n\n  useEffect(() => {\n    getPeople();\n  }, []);\n\n  return (\n    <div className=\"table\">\n      <h1 className=\"table__title\">People table</h1>\n      <div className=\"serch\">\n        <h3 className=\"serch__title\">Serch name:</h3>\n        <input\n          type=\"text\"\n          className=\"serch__input\"\n          value={serchName}\n          onChange={changeName}\n        />\n      </div>\n      <PeopleTable\n        people={filterPeople(people, serchName)}\n        sortPeople={sortPeople}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}
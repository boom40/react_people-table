{"version":3,"sources":["Person.js","PeopleTable.js","App.js","index.js"],"names":["Person","_ref","item","index","_useState","useState","_useState2","Object","slicedToArray","selectedTr","setSelectedTr","useEffect","react_default","a","createElement","className","sex","onClick","born","name","died","concat","Math","ceil","mother","father","PeopleTable","people","sortPeople","map","i","key","src_Person","App","arr","serch","setPeopleArr","_useState3","_useState4","serchName","setSerchName","_useState5","_useState6","selectedButton","setValueButton","peopleArr","regenerator_default","async","_context","prev","next","awrap","fetch","then","responce","json","sent","stop","getPeople","type","value","onChange","event","target","src_PeopleTable","filter","includes","select","toConsumableArray","sort","b","localeCompare","arrReverse","reverse","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.ecb6c575.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropType from 'prop-types';\n\nconst Person = ({ item, index }) => {\n  const [selectedTr, setSelectedTr] = useState('');\n\n  useEffect(() => {\n  }, [selectedTr]);\n\n  return (\n    <tr\n      className={\n        // eslint-disable-next-line no-sequences\n        item.sex === 'f' ? 'Person--female' : 'Person--male',\n        selectedTr === index ? 'Person--selected' : ''\n      }\n      onClick={() => setSelectedTr(index)}\n    >\n      <td>{index + 1}</td>\n      <td className={item.born < 1650\n        ? 'Person--decoration' : ''}\n      >\n        {item.name}\n      </td>\n      <td>{item.sex}</td>\n      <td>{item.born}</td>\n      <td>{item.died}</td>\n      <td className={item.died - item.born >= 65\n        ? 'Person--green' : ''}\n      >\n        {item.died - item.born}\n      </td>\n      <td className={`Person--lived-in-${Math.ceil(item.died / 100)}`}>\n        {Math.ceil(item.died / 100)}\n      </td>\n      <td>{item.mother}</td>\n      <td>{item.father}</td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  item: PropType.object.isRequired,\n  index: PropType.number.isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\n\nconst PeopleTable = ({ people, sortPeople }) => (\n\n  <table>\n    <thead>\n      <tr>\n        <th>id</th>\n        <th\n          onClick={() => sortPeople('name')}\n        >\n        name\n        </th>\n        <th\n          onClick={() => sortPeople('sex')}\n        >\n          sex\n        </th>\n        <th\n          onClick={() => sortPeople('born')}\n        >\n          born\n        </th>\n        <th\n          onClick={() => sortPeople('died')}\n        >\n          died\n        </th>\n        <th\n          onClick={() => sortPeople('age')}\n        >\n          age\n        </th>\n        <th\n          onClick={() => sortPeople('centery')}\n        >\n          century\n        </th>\n        <th>mother</th>\n        <th>father</th>\n      </tr>\n    </thead>\n    {people.map((item, i) => (\n      <tbody key={item.name}>\n        <Person item={item} index={i} />\n      </tbody>\n    ))}\n  </table>\n\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortPeople: PropTypes.func.isRequired,\n};\n\nexport default PeopleTable;\n","import React, { useState, useEffect } from 'react';\nimport './style.scss';\nimport PeopleTable from './PeopleTable';\n\nconst URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst loadPeople = () => fetch(URL).then(responce => responce.json());\n\nconst App = () => {\n  const [people, setPeopleArr] = useState([]);\n  const [serchName, setSerchName] = useState('');\n  const [selectedButton, setValueButton] = useState('');\n\n  const getPeople = async() => {\n    const peopleArr = await loadPeople();\n\n    setPeopleArr(peopleArr);\n  };\n\n  const changeName = (event) => {\n    setSerchName(event.target.value);\n  };\n\n  const filterPeople = (arr, serch) => {\n    if (serch === '') {\n      return arr;\n    }\n\n    return arr.filter((item) => {\n      if ((item.name.includes(serch))\n      || (item.mother !== null && item.mother.includes(serch))\n      || (item.father !== null && item.father.includes(serch))) {\n        return item;\n      }\n\n      return false;\n    });\n  };\n\n  const sortPeople = (select) => {\n    switch (select) {\n      case 'name':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => a.name.localeCompare(b.name)));\n          setValueButton('name');\n        }\n\n        break;\n      case 'born':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => a.born - b.born));\n          setValueButton('born');\n        }\n\n        break;\n      case 'died':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => a.born - b.born));\n          setValueButton('died');\n        }\n\n        break;\n      case 'age':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => (a.died - a.born) - (b.died - b.born)));\n          setValueButton('age');\n        }\n\n        break;\n      case 'centery':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => (\n              Math.ceil(a.died / 100)) - (Math.ceil(b.died / 100))));\n          setValueButton('centery');\n        }\n\n        break;\n      case 'sex':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => a.sex.localeCompare(b.sex)));\n          setValueButton('sex');\n        }\n\n        break;\n      default: setPeopleArr([...people]);\n    }\n\n    if (select === selectedButton) {\n      const arrReverse = [...people].reverse();\n\n      setPeopleArr(arrReverse);\n    }\n  };\n\n  useEffect(() => {\n    getPeople();\n  }, []);\n\n  return (\n    <div className=\"table\">\n      <h1 className=\"table__title\">People table</h1>\n      <div className=\"serch\">\n        <h3 className=\"serch__title\">Serch name:</h3>\n        <input\n          type=\"text\"\n          className=\"serch__input\"\n          value={serchName}\n          onChange={changeName}\n        />\n      </div>\n      <PeopleTable\n        people={filterPeople(people, serchName)}\n        sortPeople={sortPeople}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}
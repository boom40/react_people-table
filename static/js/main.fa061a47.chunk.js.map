{"version":3,"sources":["Person.js","PeopleTable.js","App.js","index.js"],"names":["Person","_ref","item","_useState","useState","_useState2","Object","slicedToArray","selectedTr","setSelectedTr","useEffect","react_default","a","createElement","className","cn","sex","Person--selected","onClick","id","born","name","died","concat","Math","ceil","mother","father","PeopleTable","people","sortPeople","map","i","key","src_Person","index","App","arr","serch","setPeopleArr","_useState3","_useState4","serchName","setSerchName","_useState5","_useState6","selectedButton","setValueButton","peopleArr","regenerator_default","async","_context","prev","next","awrap","fetch","then","responce","json","sent","objectSpread2","stop","getPeople","type","value","onChange","event","target","trimLeft","src_PeopleTable","filter","toLowerCase","includes","trim","select","toConsumableArray","sort","b","localeCompare","arrReverse","reverse","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.fa061a47.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropType from 'prop-types';\nimport cn from 'classnames';\n\nconst Person = ({ item }) => {\n  const [selectedTr, setSelectedTr] = useState('');\n\n  useEffect(() => {\n  }, [selectedTr]);\n\n  return (\n    <tr\n      className={\n        cn(\n          item.sex === 'f' ? 'Person--female' : 'Person--male',\n          { 'Person--selected': selectedTr }\n        )\n      }\n      onClick={() => setSelectedTr(item.id)}\n    >\n      <td>{item.id}</td>\n      <td className={item.born < 1650\n        ? 'Person--decoration' : ''}\n      >\n        {item.name}\n      </td>\n      <td>{item.sex}</td>\n      <td>{item.born}</td>\n      <td>{item.died}</td>\n      <td className={item.died - item.born >= 65\n        ? 'Person--green' : ''}\n      >\n        {item.died - item.born}\n      </td>\n      <td className={`Person--lived-in-${Math.ceil(item.died / 100)}`}>\n        {Math.ceil(item.died / 100)}\n      </td>\n      <td>{item.mother}</td>\n      <td>{item.father}</td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  item: PropType.object.isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\n\nconst PeopleTable = ({ people, sortPeople }) => (\n\n  <table>\n    <thead>\n      <tr>\n        <th\n          onClick={() => sortPeople('id')}\n        >\n          id\n        </th>\n        <th\n          onClick={() => sortPeople('name')}\n        >\n        name\n        </th>\n        <th\n          onClick={() => sortPeople('sex')}\n        >\n          sex\n        </th>\n        <th\n          onClick={() => sortPeople('born')}\n        >\n          born\n        </th>\n        <th\n          onClick={() => sortPeople('died')}\n        >\n          died\n        </th>\n        <th\n          onClick={() => sortPeople('age')}\n        >\n          age\n        </th>\n        <th\n          onClick={() => sortPeople('centery')}\n        >\n          century\n        </th>\n        <th>mother</th>\n        <th>father</th>\n      </tr>\n    </thead>\n    {people.map((item, i) => (\n      <tbody key={item.name}>\n        <Person item={item} index={i} />\n      </tbody>\n    ))}\n  </table>\n\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortPeople: PropTypes.func.isRequired,\n};\n\nexport default PeopleTable;\n","import React, { useState, useEffect } from 'react';\nimport './style.scss';\nimport PeopleTable from './PeopleTable';\n\nconst URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst loadPeople = () => fetch(URL).then(responce => responce.json());\n\nconst App = () => {\n  const [people, setPeopleArr] = useState([]);\n  const [serchName, setSerchName] = useState('');\n  const [selectedButton, setValueButton] = useState('');\n\n  const getPeople = async() => {\n    const peopleArr = await loadPeople();\n\n    setPeopleArr(peopleArr.map((item, index) => (\n      {\n        ...item, id: index + 1,\n      }\n    )));\n  };\n\n  const changeName = (event) => {\n    setSerchName(event.target.value.trimLeft());\n  };\n\n  const filterPeople = (arr, serch) => arr.filter((item) => {\n    if ((item.name.toLowerCase().includes(serch.toLowerCase().trim()))\n      || (item.mother !== null\n        && item.mother.toLowerCase().includes(serch.toLowerCase().trim()))\n      || (item.father !== null\n        && item.father.toLowerCase().includes(serch.toLowerCase().trim()))) {\n      return item;\n    }\n\n    return false;\n  });\n\n  const sortPeople = (select) => {\n    switch (select) {\n      case 'name':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => a.name.localeCompare(b.name)));\n          setValueButton('name');\n        }\n\n        break;\n      case 'born':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => a.born - b.born));\n          setValueButton('born');\n        }\n\n        break;\n      case 'id':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => a.id - b.id));\n          setValueButton('id');\n        }\n\n        break;\n      case 'died':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => a.born - b.born));\n          setValueButton('died');\n        }\n\n        break;\n      case 'age':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => (a.died - a.born) - (b.died - b.born)));\n          setValueButton('age');\n        }\n\n        break;\n      case 'centery':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => (\n              Math.ceil(a.died / 100)) - (Math.ceil(b.died / 100))));\n          setValueButton('centery');\n        }\n\n        break;\n      case 'sex':\n        if (select !== selectedButton) {\n          setPeopleArr([...people]\n            .sort((a, b) => a.sex.localeCompare(b.sex)));\n          setValueButton('sex');\n        }\n\n        break;\n      default: setPeopleArr([...people]);\n    }\n\n    if (select === selectedButton) {\n      const arrReverse = [...people].reverse();\n\n      setPeopleArr(arrReverse);\n    }\n  };\n\n  useEffect(() => {\n    getPeople();\n  }, []);\n\n  return (\n    <div className=\"table\">\n      <h1 className=\"table__title\">People table</h1>\n      <div className=\"serch\">\n        <h3 className=\"serch__title\">Serch name:</h3>\n        <input\n          type=\"text\"\n          className=\"serch__input\"\n          value={serchName}\n          onChange={changeName}\n        />\n      </div>\n      <PeopleTable\n        people={filterPeople(people, serchName)}\n        sortPeople={sortPeople}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}